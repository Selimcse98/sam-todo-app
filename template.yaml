AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This template describes the resources to be deployed for the Todo app
  
Globals:
  Api:
    OpenApiVersion: 3.0.1 # This option is required to prevent a stage called 'Stage' to be created automatically
  Function:
    Timeout: 3

Parameters:
  TableName:
    Type: String
    Default: 'my-todos'

Resources:
  ListTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/list-todos
      Handler: list-todos.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Select [1, !Split ['/', !GetAtt DynamoTodosTable.Arn]]
      Environment:
        Variables:
          TABLE_NAME: !Select [1, !Split ['/', !GetAtt DynamoTodosTable.Arn]]
      Events:
        ListTodos:
          Type: Api
          Properties:
            Path: /list
            Method: get
  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-todo
      Handler: update-todo.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Select [1, !Split ['/', !GetAtt DynamoTodosTable.Arn]]
      Environment:
        Variables:
          TABLE_NAME: !Select [1, !Split ['/', !GetAtt DynamoTodosTable.Arn]]
      Events:
        UpdateTodo:
          Type: Api
          Properties:
            Path: /update/{todoId}
            Method: PUT
            RequestParameters:
              method.request.path.todoId:
                Required: true
  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-todo
      Handler: create-todo.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Select [1, !Split ['/', !GetAtt DynamoTodosTable.Arn]]
      Environment:
        Variables:
          TABLE_NAME: !Select [1, !Split ['/', !GetAtt DynamoTodosTable.Arn]]
      Events:
        UpdateTodo:
          Type: Api
          Properties:
            Path: /
            Method: POST
  DynamoTodosTable:
    Type: AWS::Serverless::SimpleTable # if you want to define a more complex table, use AWS::DynamoDB::Table
    TableName: !Ref TableName
    PrimaryKey:
      Name: todo-id
      Type: String
    BillingMode: PROVISIONED
    ProvisionedThroughput:
      ReadCapacityUnit: 1
      WriteCapacityUnits: 1
    Tags:
      AppType: Serverless

Outputs:
  TodoApi:
    Description: "API Gateway endpoint URL for Prod stage for the todos functions"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
